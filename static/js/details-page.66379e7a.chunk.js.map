{"version":3,"sources":["services/movieApi.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Cast/Cast.module.css","views/DetailsPage.module.css","components/Cast/Cast.js","components/Reviews/Reviews.js","views/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","API_KEY","movieApi","fetchMovies","get","fetchSearch","searchQuery","fetchMovie","movieId","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","module","exports","Cast","state","cast","name","character","profile_path","cast_id","a","this","props","match","params","response","setState","data","className","s","actorsList","map","actor","profileUrl","actorImg","src","alt","Component","Reviews","results","author","content","id","review","MovieDetailsPage","original_title","overview","poster_path","release_date","title","handleGoBack","location","history","from","routes","home","console","log","imageUrl","type","button","onClick","actorsImg","to","pathname","url","path","component"],"mappings":"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","file":"static/js/details-page.66379e7a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '?api_key=a74414b944f8b513109b376ad415325e';\r\n\r\nconst fetchMovies = () => {\r\n  return axios.get(`trending/movie/day${API_KEY}`);\r\n};\r\n\r\nconst fetchSearch = ({ searchQuery = '' }) => {\r\n  return axios.get(\r\n    `search/movie${API_KEY}&language=en-US&include_adult=false&query=${searchQuery}`,\r\n  );\r\n};\r\n\r\nconst fetchMovie = movieId => {\r\n  return axios.get(`movie/${movieId}images${API_KEY}&language=en-US`);\r\n};\r\n\r\nconst movieApi = {\r\n  fetchMovies,\r\n  fetchSearch,\r\n  fetchMovie,\r\n};\r\nexport default movieApi;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorImg\":\"Cast_actorImg__1J7S7\",\"actorsList\":\"Cast_actorsList__2dM-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorsImg\":\"DetailsPage_actorsImg__QNmZV\",\"button\":\"DetailsPage_button__1hCxk\"};","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport s from './Cast.module.css';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '?api_key=a74414b944f8b513109b376ad415325e';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [\r\n      {\r\n        name: null,\r\n        character: null,\r\n        profile_path: null,\r\n        cast_id: null,\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await axios.get(\r\n      `movie/${movieId}/credits${API_KEY}&language=en-US`,\r\n    );\r\n\r\n    this.setState({ ...response.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Компонент актеров</h1>\r\n        <ul className={s.actorsList}>\r\n          {this.state.cast.map(actor => {\r\n            const profileUrl = `https://image.tmdb.org/t/p/w500/${actor.profile_path}`;\r\n            return (\r\n              <li key={actor.cast_id}>\r\n                {actor.profile_path && (\r\n                  <img\r\n                    className={s.actorImg}\r\n                    src={profileUrl}\r\n                    alt={actor.name}\r\n                  />\r\n                )}\r\n                <p>{actor.name}</p>\r\n                <p>{actor.character}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '?api_key=a74414b944f8b513109b376ad415325e';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    results: [{ author: null, content: null, id: null }],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await axios.get(\r\n      `movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`,\r\n    );\r\n\r\n    this.setState({ ...response.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Компонент рецензий</h1>\r\n        <ul>\r\n          {this.state.results.map(review => (\r\n            <li key={review.id}>\r\n              <p>{review.author}</p>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport movieApi from '../services/movieApi';\r\nimport Cast from '../components/Cast';\r\nimport Reviews from '../components/Reviews';\r\nimport routes from '../routes';\r\nimport s from './DetailsPage.module.css';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    id: null,\r\n    original_title: null,\r\n    overview: null,\r\n    poster_path: null,\r\n    release_date: null,\r\n    title: null,\r\n  };\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await movieApi.fetchMovie(movieId);\r\n    console.log(this.props.location);\r\n\r\n    this.setState({ ...response.data });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state && location.state.from) {\r\n      return history.push(location.state.from);\r\n    }\r\n    return history.push(routes.home);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      poster_path,\r\n      original_title,\r\n      title,\r\n      overview,\r\n      release_date,\r\n    } = this.state;\r\n\r\n    const { match } = this.props;\r\n    const imageUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\r\n    return (\r\n      <>\r\n        <button type=\"button\" className={s.button} onClick={this.handleGoBack}>\r\n          Вернуться назад\r\n        </button>\r\n        {/* <h1>Это страница фильма {match.params.movieId}</h1> */}\r\n        {poster_path && (\r\n          <img\r\n            className={s.actorsImg}\r\n            src={imageUrl}\r\n            alt={original_title}\r\n          ></img>\r\n        )}\r\n        <h2>{original_title || title}</h2>\r\n        <p>{overview}</p>\r\n        <p>{release_date}</p>\r\n        <NavLink\r\n          to={{\r\n            pathname: `${match.url}/cast`,\r\n            state: { ...this.props.location.state },\r\n          }}\r\n        >\r\n          <p>Cast</p>\r\n        </NavLink>\r\n        <NavLink\r\n          to={{\r\n            pathname: `${match.url}/reviews`,\r\n            state: { ...this.props.location.state },\r\n          }}\r\n        >\r\n          <p>Reviews</p>\r\n        </NavLink>\r\n\r\n        <Route path={`${match.path}/cast`} component={Cast} />\r\n        <Route path={`${match.path}/reviews`} component={Reviews} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}